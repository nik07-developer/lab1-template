name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Autograding
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # TODO build, test and deploy project

      - name: Setup .NET 8.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Install dependencies
        run: dotnet add src package Npgsql --version 9.0.2

      - name: Build
        run: dotnet build src --configuration Release

      - name: Run API Tests
        uses: matt-ball/newman-action@master
        with:
          collection: postman/[inst] Lab1.postman_collection.json
          environment: postman/[inst][local] Lab1.postman_environment.json
          delayRequest: 100
          reporters: '[ "cli" ]'

      - name: Autograding
        uses: education/autograding@v1
        continue-on-error: true

      - name: Github auto grader mark
        uses: Romanow/google-sheet-autograder-marker@v1.0
        with:
          google_token: ${{secrets.GOOGLE_API_KEY}}
          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
          homework_number: 1
          user_column: 'D'
          column_offset: 'F'
          mark: "'+"
        
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Keygen
        run: |
          echo "Deploying to server..."
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
          
      - name: Deploy
        uses: D3rHase/ssh-command-action@v0.2.2
        with:
          host: ${{secrets.SSH_HOST}}
          user: ${{secrets.SSH_USER}}
          private_key: ${{secrets.SSH_PRIVATE_KEY}}
          #host_fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          command: |
            cd lab1-template;
            git checkout master;
            git pull;
            sudo docker compose -f docker-compose.yml down;
            sudo docker compose -f docker-compose.yml up -d --build;
            
